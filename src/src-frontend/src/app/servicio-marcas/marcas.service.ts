import { Injectable } from '@angular/core';

interface Marcas {
  [key: string]: string;
}

@Injectable({
  providedIn: 'root',
})
export class MarcasService {
  marcas: Marcas = {
    51539: '9ff',
    16396: 'Abarth',
    14979: 'AC',
    16429: 'ACM',
    16356: 'Acura',
    51872: 'Aiways',
    16352: 'Aixam',
    51917: 'Alba Mobility',
    6: 'Alfa Romeo',
    14: 'Alpina',
    51796: 'Alpine',
    51545: 'Amphicar',
    51918: 'Angelelli Automobili',
    16419: 'Ariel Motor',
    16427: 'Artega',
    51948: 'Aspark',
    16431: 'Aspid',
    8: 'Aston Martin',
    51929: 'Aurus',
    15643: 'Austin',
    51901: 'Austin-Healey',
    15644: 'Autobianchi',
    13: 'BMW',
    51774: 'BAIC',
    16400: 'Bedford',
    16416: 'Bellier',
    11: 'Bentley',
    51900: 'Boldmen',
    16418: 'Bolloré',
    16424: 'Borgward',
    16367: 'Brilliance',
    51895: 'Bristol',
    51986: 'Brute',
    15: 'Bugatti',
    16: 'Buick',
    16379: 'BYD',
    17: 'Cadillac',
    15672: 'Caravans-Wohnm',
    51912: 'Carver',
    16407: 'Casalini',
    16335: 'Caterham',
    51936: 'Cenntro',
    16401: 'Changhe',
    16357: 'Chatenet',
    16384: 'Chery',
    19: 'Chevrolet',
    20: 'Chrysler',
    51971: 'Cirelli',
    21: 'Citroen',
    16411: 'CityEL',
    16380: 'Corvette',
    51802: 'CUPRA',
    16360: 'Dacia',
    22: 'Daewoo',
    16333: 'DAF',
    23: 'Daihatsu',
    16397: 'Daimler',
    51947: 'Dallara',
    16434: 'Dangel',
    16423: 'De la Chapelle',
    51779: 'De Tomaso',
    51859: 'Delorean',
    51920: 'Devinci Cars',
    51773: 'DFSK',
    2152: 'Dodge',
    16339: 'Donkervoort',
    16383: 'DR Automobiles',
    16415: 'DS Automobiles',
    51552: 'Dutton',
    51794: 'e.GO',
    51835: 'Econelo',
    51905: 'Edran',
    51880: 'Elaris',
    51874: 'Embuggy',
    51924: 'EMC',
    51984: 'EMC',
    16436: 'Estrima',
    51919: 'Evetta',
    51831: 'EVO',
    27: 'Ferrari',
    28: 'Fiat',
    51543: 'FISKER',
    29: 'Ford',
    51987: 'Forthing',
    51973: 'Foton',
    51542: 'Gac Gonow',
    16337: 'Galloper',
    51907: 'Gappy',
    16386: 'GAZ',
    16403: 'GEM',
    51540: 'GEMBALLA',
    51885: 'Genesis',
    51837: 'Giana',
    51791: 'Gillet',
    16421: 'Giotti Victoria',
    2153: 'GMC',
    51813: 'Goupil',
    16382: 'Great Wall',
    16409: 'Grecav',
    51926: 'GTA',
    51981: 'GWM',
    51512: 'Haima',
    51534: 'Hamann',
    51816: 'Haval',
    51977: 'Hiphi',
    51881: 'Holden',
    31: 'Honda',
    51946: 'Hongqi',
    51988: 'Hongqi',
    15674: 'HUMMER',
    51767: 'Hurtan',
    33: 'Hyundai',
    51925: 'Ineos',
    16355: 'Infiniti',
    15629: 'Innocenti',
    16402: 'Iso Rivolta',
    35: 'Isuzu',
    14882: 'Iveco',
    16387: 'IZH',
    51849: 'JAC',
    37: 'Jaguar',
    38: 'Jeep',
    51910: 'Jensen',
    51875: 'Karma',
    51975: 'KG Mobility',
    39: 'Kia',
    51781: 'Koenigsegg',
    50060: 'KTM',
    40: 'Lada',
    41: 'Lamborghini',
    42: 'Lancia',
    15641: 'Land Rover',
    16426: 'LDV',
    51854: 'LEVC',
    43: 'Lexus',
    16393: 'Lifan',
    16353: 'Ligier',
    14890: 'Lincoln',
    51883: 'Linzda',
    51908: 'Lorinser',
    44: 'Lotus',
    51921: 'Lucid',
    51914: 'Lynk & Co',
    51976: 'M-Ero',
    16359: 'Mahindra',
    51780: 'MAN',
    16435: 'Mansory',
    51906: 'Martin',
    16410: 'Martin Motors',
    45: 'Maserati',
    51955: 'Matra',
    51803: 'Maxus',
    16348: 'Maybach',
    46: 'Mazda',
    51519: 'McLaren',
    51902: 'Mega',
    16399: 'Melex',
    47: 'Mercedes-Benz',
    51834: 'Mercury',
    48: 'MG',
    51965: 'Micro',
    16361: 'Microcar',
    51897: 'Militem',
    51903: 'Minari',
    51766: 'Minauto',
    16338: 'MINI',
    50: 'Mitsubishi',
    51782: 'Mitsuoka',
    51: 'Morgan',
    16388: 'Moskvich',
    51554: 'MP Lafer',
    51788: 'MPM Motors',
    51928: 'NIO',
    52: 'Nissan',
    50111: 'NSU',
    53: 'Oldsmobile',
    15670: 'Oldtimer',
    54: 'Opel',
    51934: 'Ora',
    16341: 'Pagani',
    51553: 'Panther Westwinds',
    55: 'Peugeot',
    50083: 'PGO',
    16350: 'Piaggio',
    51770: 'Plymouth',
    51817: 'Polestar',
    56: 'Pontiac',
    57: 'Porsche',
    15636: 'Proton',
    15646: 'Puch',
    51793: 'RAM',
    51812: 'Regis',
    16398: 'Reliant',
    60: 'Renault',
    61: 'Rolls-Royce',
    62: 'Rover',
    51536: 'Ruf',
    63: 'Saab',
    16369: 'Santana',
    64: 'SEAT',
    51866: 'Segway',
    51839: 'Selvo',
    51861: 'Seres',
    51827: 'Sevic',
    51913: 'SGS',
    51896: 'Shelby',
    51800: 'Shuanghuan',
    51853: 'Silence',
    51909: 'Singer',
    65: 'Skoda',
    51959: 'Skywell',
    15525: 'smart',
    51538: 'SpeedArt',
    51949: 'Sportequipe',
    16377: 'Spyker',
    66: 'SsangYong',
    51795: 'StreetScooter',
    51833: 'Studebaker',
    67: 'Subaru',
    68: 'Suzuki',
    51551: 'Talbot',
    16404: 'Tasso',
    16327: 'Tata',
    51557: 'Tazzari EV',
    51535: 'TECHART',
    51520: 'Tesla',
    51950: 'Togg',
    16420: 'Town Life',
    70: 'Toyota',
    15633: 'Trabant',
    16326: 'Trailer-Anhänger',
    2120: 'Triumph',
    16253: 'Trucks-Lkw',
    71: 'TVR',
    16389: 'UAZ',
    51836: 'Vanden Plas',
    51809: 'Vanderhall',
    16385: 'VAZ',
    16422: 'VEM',
    51915: 'VinFast',
    74: 'Volkswagen',
    73: 'Volvo',
    16336: 'Wartburg',
    51873: 'Weltmeister',
    51852: 'Wenckstern',
    51513: 'Westfield',
    51935: 'Wey',
    16351: 'Wiesmann',
    51869: 'XBus',
    51860: 'XEV',
    51940: 'Xpeng',
    16408: 'Zastava',
    16394: 'ZAZ',
    51964: 'Zeekr',
    51798: 'Zhidou',
    51807: 'Zotye',
    16328: 'Otros',
  };

  constructor() {}

  obtenerMarcas(): any[] {
    // Convertir el objeto de marcas en un array de objetos { id, label }
    return Object.keys(this.marcas).map((id) => ({
      id,
      label: this.marcas[id],
    }));
  }

  obtenerNombreMarcaPorId(marcaId: number) {
    // Verificar si el ID de la marca existe en el objeto de marcas
    if (marcaId in this.marcas) {
      // Devolver el nombre de la marca correspondiente al ID
      return this.marcas[marcaId];
    } else {
      // Si no se encuentra el ID de la marca, devolver un valor predeterminado o lanzar una excepción según la lógica de tu aplicación
      return 'Marca Desconocida';
      // O podrías lanzar una excepción si el ID no está presente en el objeto de marcas
      // throw new Error(`No se encontró la marca con ID ${marcaId}`);
    }
  }
}
